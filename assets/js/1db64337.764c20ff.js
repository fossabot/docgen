"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[413],{3022:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>l});var o=t(4848),i=t(8453);const d={sidebar_label:"Overview",slug:"overview"},r="Welcome DocGen documentation",s={id:"overview",title:"Welcome DocGen documentation",description:"A quick understanding of DocGen",source:"@site/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/docgen/docs/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/weblidity/docgen/blob/main/website/docs/overview.md",tags:[],version:"current",frontMatter:{sidebar_label:"Overview",slug:"overview"},sidebar:"docgenSidebar",next:{title:"Getting started",permalink:"/docgen/docs/getting-started"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"How to use DocGen",id:"how-to-use-docgen",level:2},{value:"What it generates",id:"what-it-generates",level:2},{value:"Overall process description",id:"overall-process-description",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"welcome-docgen-documentation",children:"Welcome DocGen documentation"})}),"\n",(0,o.jsx)(n.p,{children:"A quick understanding of DocGen"}),"\n",(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Why do it, what does it do?"}),"\n",(0,o.jsx)(n.h2,{id:"how-to-use-docgen",children:"How to use DocGen"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"describe products in product files. A product file defines at least one product. A product description is either a string or an object with at least the label property."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"other product properties include: productId, description, path, slug."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"uses a validation schema."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"it uses templates"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"it uses a configuration file"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"what-it-generates",children:"What it generates"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"a product folder and an index page inside the product folder."}),"\n",(0,o.jsxs)(n.li,{children:["an documentation index.md file in the ",(0,o.jsx)(n.code,{children:"docs"})," folder - contains a product directory, with product label ordered alphabetically. The product entry links to product folder."]}),"\n",(0,o.jsxs)(n.li,{children:["a ",(0,o.jsx)(n.code,{children:"products.outline.yaml"})," file - you will use this file in when you invoke the ",(0,o.jsx)(n.code,{children:"skelo CLI"})," to generate the documentation files."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"overall-process-description",children:"Overall process description"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Your company develops several products and you have a list of products labels."}),"\n",(0,o.jsxs)(n.li,{children:['You will store the each product documentation in a product folder. "Product One" documentation and landing page are stored in ',(0,o.jsx)(n.code,{children:"docs/product-one"})," folder."]}),"\n",(0,o.jsxs)(n.li,{children:['The product folder has an index page that you can use a product landing page. The product landing page for "Product One" is at: ',(0,o.jsx)(n.code,{children:"docs/product-one/index.md"}),". The product's landing page URL is ",(0,o.jsx)(n.code,{children:"https://<company-url>/docs/product-one"}),". It contains a link to product's first page of documentation."]}),"\n",(0,o.jsxs)(n.li,{children:['The Product One documentation first page appears as "Overview" in the sidebar, and is in the ',(0,o.jsx)(n.code,{children:"docs/page-one/overview.md"})," file."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"docs/index.md"})," page contains a product directory, with products ordered alphabetically and linking to the product index page."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This structure allows visitors to view a list of products, to view the product page, and connect to the product documentation."}),"\n",(0,o.jsxs)(n.p,{children:["The product generates the summary page and product index page for each product. It also generates an ",(0,o.jsx)(n.code,{children:".outline.yaml"})," file that you use use with ",(0,o.jsx)(n.code,{children:"skelo CLI"})," to generate the product top documentation page."]}),"\n",(0,o.jsxs)(n.p,{children:["After generating the folders and index.md pages, you have to generate the sidebars for each product and the ",(0,o.jsx)(n.code,{children:"sidebars.js"})," file that tells Docusaurus the structure for each product documentation. While you can do this manually, a much easier method is to use the ",(0,o.jsx)(n.code,{children:"products.outline.yaml"})," with skelo CLI."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(6540);const i={},d=o.createContext(i);function r(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);